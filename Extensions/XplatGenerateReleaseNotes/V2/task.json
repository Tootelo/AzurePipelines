{
  "id": "9e85c1a0-d730-4745-afa9-d28f8b906244",
  "name": "XplatGenerateReleaseNotes",
  "friendlyName": "Generate Release Notes (Crossplatform)",
  "description": "Generates a release notes file in a format of your choice from the build or release history",
    "helpMarkDown": "Version: #{Build.BuildNumber}#. [More Information](https://github.com/rfennell/vNextBuild/wiki/GenerateReleaseNotes---Node-based-Cross-Platform-Task/)",

  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "author": "Black Marble",
  "version": {
    "Major": 2,
    "Minor": 53,
    "Patch": 2
  },
  "minimumAgentVersion": "1.82.0",
  "groups": [
    {
      "name": "advanced",
      "displayName": "Advanced",
      "isExpanded": false
    },
    {
      "name": "handlebars",
      "displayName": "Handlebars",
      "isExpanded": false
    },
     {
      "name": "outputs",
      "displayName": "Outputs",
      "isExpanded": false
    }
  ],
   "inputs": [
      {
         "name": "outputfile",
         "type": "string",
         "label": "Output file",
         "defaultValue": "",
         "required": true,
         "helpMarkDown": "The name of the Markdown file to export e.g. $(Build.ArtifactStagingDirectory)\\releasenotes.md if within a build workflow "
      },
      {
         "name": "outputVariableName",
         "type": "string",
         "label": "Output variable",
         "defaultValue": "",
         "required": false,
         "helpMarkDown": "The name of the variable that the markdown output should be assigned to for use later in your workflow.",
         "groupName":"outputs"
      },
      {
      "name": "templateLocation",
      "type": "pickList",
      "label": "Template Location",
      "defaultValue": "File",
      "required": true,
      "options": {
        "File": "File",
        "InLine": "InLine"
      },
      "helpMarkDown": "Select the template file source, file in source control or in line."
      },
      {
         "name": "templatefile",
         "type": "filePath",
         "label": "Template file",
         "defaultValue": "",
         "required": true,
         "helpMarkDown": "The name of the Markdown template.",
         "visibleRule": "templateLocation = File"
      }
      ,
      {
         "name": "inlinetemplate",
         "type": "multiLine",
         "label": "Template",
         "defaultValue": "",
         "required": true,
         "helpMarkDown": "The Markdown template."
         ,
         "visibleRule": "templateLocation = InLine"
      }
      ,
    {
      "name": "emptySetText",
      "type": "string",
      "label": "Text for empty sets",
      "defaultValue": "None",
      "required": false,
      "helpMarkDown": "This is the text that will be placed in the generated release notes if there are no work items or changesets/commits.",
      "groupName":"advanced"
    }
  ,
  {
    "name": "delimiter",
    "type": "string",
    "label": "Delimiter for tags",
    "defaultValue": ":",
    "required": true,
    "helpMarkDown": "The delimiter is used to separate field filter and tags in the @@WILOOP:TAG1:TAG2@@ block markers. Default is :",
    "groupName":"advanced"
  },
  {
    "name": "fieldEquality",
    "type": "string",
    "label": "Expression equality",
    "defaultValue": "=",
    "required": true,
    "helpMarkDown": "The field equality symbol used to in field filter e.g. @@WILOOP:System.Title=123@@ block markers. The default is =",
    "groupName":"advanced"
  }
,
{
  "name": "anyFieldContent",
  "type": "string",
  "label": "Symbol for 'any field value'",
  "defaultValue": "*",
  "required": true,
  "helpMarkDown": "The value to put in WILOOP constructs to match any contents e.g. @@WILOOP:System.Title=*@@. The default is *",
  "groupName":"advanced"
}
,
    {
      "name": "overrideStageName",
      "type": "string",
      "label": "Name of stage (override)",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "If set uses this stage name to find the last successful deployment, as opposed to the currently active stage (Release usage only)",
      "groupName":"advanced"
     },
     {
      "name": "stopOnRedeploy",
      "type": "boolean",
      "label": "No generation on re-deploy",
      "defaultValue": "False",
      "required": false,
      "helpMarkDown": "Do not generate release notes of a re-deploy. If this is set, and a re-deploy occurs the task will succeeds with a warning",
      "groupName":"advanced"
     },
     {
      "name": "sortWi",
      "type": "boolean",
      "label": "Sort WI",
      "defaultValue": "False",
      "required": false,
      "helpMarkDown": "If true will sort work items by type, if false then it will leave the work items in default order",
      "groupName":"advanced"
     },
     {
      "name": "showOnlyPrimary",
      "type": "boolean",
      "label": "Show Primary only",
      "defaultValue": "False",
      "required": false,
      "helpMarkDown": "If true only show WI/CS associated with primary release artifact",
      "groupName":"advanced"
     },
     {
      "name": "searchCrossProjectForPRs",
      "type": "boolean",
      "label": "Cross Project For PRs",
      "defaultValue": "False",
      "required": false,
      "helpMarkDown": "If true will try to match commits to Azure DevOps PR cross project within the organisation, if false only searches the Team Project",
      "groupName":"advanced"
     },
     {
      "name": "gitHubPat",
      "type": "string",
      "label": "GitHub PAT",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "To expand commit messages stored in a private GitHub repos a PAT needs to be provided, it is not required for repo stored in Azure DevOps or public GitHub repos",
      "groupName":"advanced"
     },
     {
      "name": "dumpPayloadToConsole",
      "type": "boolean",
      "label": "Dump Payload to Console",
      "defaultValue": "false",
      "groupName":"advanced",
      "required": true,
      "helpMarkDown": "If true the data objects passed to the file generator is dumped to the log"
    },
    {
      "name": "dumpPayloadToFile",
      "type": "boolean",
      "label": "Dump Payload to File",
      "defaultValue": "false",
      "groupName":"advanced",
      "required": true,
      "helpMarkDown": "If true the data objects passed to the file generator is dumped to a JSON file"
    },
     {
      "name": "dumpPayloadFileName",
      "type": "string",
      "label": "Payload Dump File",
      "defaultValue": "$(Build.ArtifactStagingDirectory)\\payload.json",
      "required": false,
      "helpMarkDown": "The filename to dump the data objects passed to the file generator",
      "groupName":"advanced",
      "visibleRule":"dumpPayloadToFile = True"
     },
     {
      "name": "replaceFile",
      "type": "boolean",
      "label": "Replace the output file",
      "defaultValue": "True",
      "required": true,
      "helpMarkDown": "Replace the output file"
    },
    {
      "name": "appendToFile",
      "type": "boolean",
      "label": "Append to end of the output file",
      "defaultValue": "True",
      "required": true,
      "helpMarkDown": "Append to end of file in the output file if not replacing file",
      "visibleRule":"replaceFile = False"
    },
     {
      "name": "customHandlebarsExtensionCode",
      "type": "multiLine",
      "label": "Custom Handlebars Extension",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "A custom Handlebars extension written as a JavaScript module e.g. module.exports = {foo: function () {return 'Returns foo';}};",
      "groupName":"handlebars"
     },
     {
      "name": "getParentsAndChildren",
      "type": "boolean",
      "label": "Find related WI",
      "defaultValue": "False",
      "required": true,
      "helpMarkDown": "Find the parents and child workitems for any workitems associated with a build",
      "groupName":"handlebars"
    }


   ],
  "instanceNameFormat": "Generate Release Notes based on Release Comparison API",
  "execution": {
    "Node": {
            "target": "GenerateReleaseNotes.js",
            "argumentFormat": ""
     }
  }
}
